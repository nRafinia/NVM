@implements IDashboardComponent

<div class="card">
    <div class="card-header pb-0">
        <div class="d-flex align-items-center mb-2 pb-1">
            <div class="avatar me-2">
                <img src="img/hardware/ram_64.png" alt="ram" class="rounded"/>
            </div>
            <h5 class="ms-1 mb-0">RAM</h5>
        </div>
    </div>

    <div class="row row-bordered g-0">
        <div class="@_internalColSize">
            <ul class="p-1 m-3">
                <li class="d-flex pb-2">
                    <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                        <div class="me-2">
                            <h6 class="mb-0">Total</h6>
                        </div>
                        <div class="user-progress">@(_memoryInformation?.TotalPhysical.FormatSize())</div>
                    </div>
                </li>

                <li class="d-flex pb-2">
                    <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                        <div class="me-2">
                            <h6 class="mb-0">Available</h6>
                        </div>
                        <div class="user-progress">@(_memoryInformation?.AvailablePhysical.FormatSize())</div>
                    </div>
                </li>
            </ul>
        </div>

        @for (var i = 0; i < (_memoryHwInformation?.Count ?? 0); i++)
        {
            var slot = _memoryHwInformation?[i];
            
            <div class="@_internalColSize">
                <small class="card-header m-0 me-2 pb-3">Slot @(i+1)</small>
                <ul class="p-1 m-3">
                    <li class="d-flex pb-2">
                        <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                            <div class="me-2">
                                <h6 class="mb-0">Capacity</h6>
                            </div>
                            <div class="user-progress">@(slot?.Capacity.FormatSize())</div>
                        </div>
                    </li>
                    <li class="d-flex pb-2">
                        <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                            <div class="me-2">
                                <h6 class="mb-0">Manufacture</h6>
                            </div>
                            <div class="user-progress">@slot?.Manufacture</div>
                        </div>
                    </li>
                    <li class="d-flex pb-2">
                        <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                            <div class="me-2">
                                <h6 class="mb-0">Part number</h6>
                            </div>
                            <div class="user-progress">@slot?.PartNumber</div>
                        </div>
                    </li>
                </ul>
            </div>
        }
    </div>
</div>

@code {
    private MemoryInformation? _memoryInformation;
    private IList<MemoryHwInformation>? _memoryHwInformation;
    private string _internalColSize = "col-4";
    private string _externalColSize = "col-12";

    [Parameter]
    public EventCallback GettingFinishedCallback { get; set; }
    
    public async Task GetInformation(IHardwareInformationLogic hardwareInformation)
    {
        var getMemoryResponse = await hardwareInformation.GetMemory();
        if (getMemoryResponse.IsSuccess)
        {
            _memoryInformation = getMemoryResponse.Value!;
        }

        var getMemoryHwResponse = await hardwareInformation.GetMemorySlot();
        if (getMemoryHwResponse.IsSuccess)
        {
            _memoryHwInformation = getMemoryHwResponse.Value!;
            _internalColSize = _memoryHwInformation.Count switch
            {
                0=>"col-12",
                1=>"col-12 col-lg-6",
                _=>"col-12 col-lg-4"
                };
            
            _externalColSize = _memoryHwInformation.Count switch
            {
                0=>"col-12 col-lg-4",
                1=>"col-12 col-lg-6",
                _=>"col-12"
                };
        }

        await InvokeAsync(StateHasChanged);
        await GettingFinishedCallback.InvokeAsync();
    }
    
    public string GetColSize => _externalColSize;

    public bool IsVisible => _memoryInformation is not null;
}