@implements IDashboardComponent

<div class="card">
    <div class="card-header pb-0">
        <div class="d-flex align-items-center mb-2 pb-1">
            <div class="avatar me-2">
                <img src="img/hardware/motherboard_64.png" alt="motherboard" class="rounded"/>
            </div>
            <h5 class="ms-1 mb-0">Motherboard</h5>
        </div>
    </div>

    <div class="row row-bordered g-0">
        @foreach (var motherboard in _information ?? new List<MotherboardInformation>(0))
        {
            <div class="@_internalColSize">
                <ul class="p-1 m-3">
                    <li class="d-flex pb-1">
                        <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                            <div class="me-2">
                                <h6 class="mb-0">Manufacture</h6>
                            </div>
                            <div class="user-progress">@motherboard.Manufacture</div>
                        </div>
                    </li>
                    <li class="d-flex pb-1">
                        <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                            <div class="me-2">
                                <h6 class="mb-0">Product</h6>
                            </div>
                            <div class="user-progress">@motherboard.Product</div>
                        </div>
                    </li>
                    <li class="d-flex pb-1">
                        <div class="d-flex w-100 flex-wrap align-items-center justify-content-between gap-2">
                            <div class="me-2">
                                <h6 class="mb-0">Serial number</h6>
                            </div>
                            <div class="user-progress">@motherboard.SerialNumber</div>
                        </div>
                    </li>
                </ul>
            </div>
        }
    </div>
</div>


@code {
    private IList<MotherboardInformation>? _information;
    private string _internalColSize = "col-4";
    private string _externalColSize = "col-12";

    [Parameter]
    public EventCallback GettingFinishedCallback { get; set; }

    public async Task GetInformation(IHardwareInformationLogic hardwareInformation)
    {
        var getInformationResponse = await hardwareInformation.GetMotherboard();
        if (getInformationResponse.IsFailure)
        {
            return;
        }

        _information = getInformationResponse.Value!;

        _internalColSize = _information.Count switch
        {
            1=>"col-12",
            2=>"col-12 col-lg-6",
            _=>"col-12 col-lg-4"
            };

        _externalColSize = _information.Count switch
        {
            1=>"col-12 col-lg-4",
            2=>"col-12 col-lg-6",
            _=>"col-12"
            };

        await InvokeAsync(StateHasChanged);
        await GettingFinishedCallback.InvokeAsync();
    }

    public string GetColSize => _externalColSize;

    public bool IsVisible =>
        _information is not null &&
        _information.Any() &&
        _information.Any(i =>
            !string.IsNullOrWhiteSpace(i.Manufacture) &&
            !string.IsNullOrWhiteSpace(i.Product) &&
            !string.IsNullOrWhiteSpace(i.SerialNumber));

}