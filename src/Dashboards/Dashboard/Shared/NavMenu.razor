@using Dashboard.Components
@using Dashboard.Components.Models

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Dashboard</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <div>
        <TreeViewList Items="_items2" TData="TestClass" OnSelectNode="@OnNodeSelect"/>
    </div>
</div>

@code {
    private bool _collapseNavMenu = true;

    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }


    protected class TestClass
    {
        public string Alaki { get; set; }
    }

    List<TreeItemData<TestClass>>? _items2;

    protected override Task OnInitializedAsync()
    {
        var root = new TreeItemData<TestClass>("Root", null, true);
        var item1 = new TreeItemData<TestClass>("Inbox", null, true,"/images/icons/datacenter-16.png");
        var item2 = new TreeItemData<TestClass>("Category", null, true);
        var item3 = new TreeItemData<TestClass>("Primary", null);
        var item4 = new TreeItemData<TestClass>("Demo", null, true);
        var item5 = new TreeItemData<TestClass>("Social", null);
        var item6 = new TreeItemData<TestClass>("Promotion", null, true);
        var item7 = new TreeItemData<TestClass>("Alaki", null);

        var item21 = new TreeItemData<TestClass>("Inbox2", null);
        var item22 = new TreeItemData<TestClass>("Category 2", null);

        root.AddChild(item1);
        root.AddChild(item21);

        item1.AddChild(item2);
        item2.AddChild(item3, item4);
        item4.AddChild(item5, item6);
        item6.AddChild(item7);

        item21.AddChild(item22);

        _items2 = new List<TreeItemData<TestClass>>()
        {
            root
        };

        return base.OnInitializedAsync();
    }

    private async Task OnNodeSelect(TreeItemData<TestClass> item)
    {
        //Console.WriteLine(item.Text);
    }

}