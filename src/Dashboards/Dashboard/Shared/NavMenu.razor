@using Dashboard.Components

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Dashboard</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<SourceCodeLink Repository="Blazor.TreeViews" Page="@nameof(NavMenu)" />
<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <div>
        <TreeView Items="Nested" GetChildren="(item) => item.Children">
            <ItemTemplate>
                @context.Item.Self 
            </ItemTemplate>
            
        </TreeView>
    </div>
    
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    
    
    private static readonly List<Item> AllItems = new List<Item>
    {
        new Item
        {
            Self = "1",
            Children = new List<Item>
            {
                new Item
                {
                    Self = "1.1"
                },
                new Item
                {
                    Self = "1.2"
                }
            }
        },
        new Item
        {
            Self = "2"
        },
        new Item
        {
            Self = "3",
            Children = new List<Item>
            {
                new Item
                {
                    Self = "3.1",
                    Children = new List<Item>
                    {
                        new Item
                        {
                            Self = "3.1.1"
                        },
                        new Item
                        {
                            Self = "3.1.2"
                        }
                    }
                },
            }
        }
    };
    private class Item
    {
        public string Self { get; set; }
        public List<Item> Children { get; set; }
    }
    private List<Item> Nested = AllItems.ToList();
    
}