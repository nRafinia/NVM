@using Dashboard.Domain.Entities
@using System.Security.Claims
@inherits LayoutComponentBase

@inject NavigationManager NavigationManager
@inject DashboardAuthentication Authenticator

<PageTitle>Dashboard</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu/>
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>

            <AuthorizeView Context="Account">
                <NotAuthorized>
                    <a href="/Login"></a>
                </NotAuthorized>
                <Authorized>
                    <label>@_currentUserGivenName</label>
                    <button type="button" class="btn btn-primary" @onclick="TryLogout">Logout</button>
                </Authorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    private string _currentUserGivenName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var user = (await AuthStat).User;
        if (!(user.Identity?.IsAuthenticated ?? false))
        {
            NavigationManager.NavigateTo($"/login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}");
        }

        _currentUserGivenName = user.FindFirst(ClaimTypes.GivenName)?.Value ?? string.Empty;
    }

    private async Task TryLogout()
    {
        await Authenticator.LogoutAsync();
        NavigationManager.NavigateTo("/login", true);
    }

}