@using Dashboard.Application.Credentials.Commands.AddCredentials.AddCredentialsNone
@using Dashboard.Application.Credentials.Commands.CommitCredentialsChanges

@inject IMediator Mediator
@inject SweetAlertService Swal;

<Dialog title="Add None certificate" @ref="_addCertificate">
    <Body>
    <div class="form-group">
        <label for="txt-add-none-name">Name <span class="required">*</span></label>
        <input type="text" class="form-control" id="txt-add-none-name" @bind="_name" placeholder="certificate name"/>
    </div>

    <div class="form-group">
        <label for="txt-add-none-description">Description</label>
        <input type="text" class="form-control" id="txt-add-none-description" @bind="_description" placeholder="(optional)"/>
    </div>
    </Body>
    <Footer>
        <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="Add">Add</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Close</button>
    </Footer>
</Dialog>

@code {
    [Parameter]
    public EventCallback OnAdd { get; set; }
    
    private Dialog? _addCertificate;

    private string _name = string.Empty;
    private string? _description = string.Empty;

    public void Show()
    {
        _name = string.Empty;
        _description = default;
        _addCertificate?.Open();
    }

    private void Close()
    {
        _addCertificate?.Close();
    }

    private async Task Add()
    {
        if (!IsValidForm())
        {
            await Swal.FireAsync("Error", "Invalid form data", SweetAlertIcon.Error);
            return;
        }

        var addCertificateResponse = await Mediator.Send(new AddCredentialNone(_name, _description));

        if (addCertificateResponse.IsFailure)
        {
            await Swal.FireAsync("Error", addCertificateResponse.Error!.Message, SweetAlertIcon.Error);
            return;
        }

        await Mediator.Send(new CommitCredentialChanges());
        
        Close();

        await OnAdd.InvokeAsync();
    }

    private bool IsValidForm()
    {
        return !string.IsNullOrWhiteSpace(_name);
    }


}