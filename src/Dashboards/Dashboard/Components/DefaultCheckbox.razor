@using Microsoft.JSInterop
@inject IJSRuntime js

<input @ref="_checkbox" type="checkbox" checked="@Value" disabled="@Disabled" @onclick="() => { Value = (Value != true); ValueChanged?.Invoke(Value); }" @onclick:stopPropagation />

@code {
    private ElementReference _checkbox;
    
    [Parameter] 
    public bool Value { get; set; }
    
    [Parameter] 
    public Action<bool>? ValueChanged { get; set; }
    
    [Parameter] 
    public bool Disabled { get; set; }
    
    [Parameter] 
    public bool Indeterminate { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("eval", $"document.querySelector('[_bl_{_checkbox.Id}=\"\"]').indeterminate = {(Indeterminate ? "true" : "false")}");
        await base.OnAfterRenderAsync(firstRender);
    }
}
