@typeparam T
@inherits Dashboard.Components.Models.TreeItemBase
@{
    var classes = string.Join(" ",
        "excubo-blazor-treeview-item",
        (TreeView?.Disabled ?? false ? "excubo-blazor-treeview-item-disabled" : ""),
        (HasChildren ? "" : "excubo-blazor-treeview-item-nochildren"),
        ($"excubo-blazor-treeview-item-{(Collapsed ? "collapsed" : "expanded")}")
        );
}

<li class="@Class @classes">
    <div style="display: flex; align-items: center; @(HasChildren ? "cursor: pointer" : "")" @onclick="OnClickEvent">
        <svg viewBox="0 0 16 16" style="height: 1em; transform: rotate(@(Collapsed ? 0 : 90)deg);">
            <path d="M 4 2 l 7 6 l -7 6"/>
        </svg>
        @if (AllowSelection)
        {
            @CheckboxTemplate(Selected, Indeterminate, SelectedChanged, Disabled)
        }
        <div style="flex-grow: 1; display: inline-block; vertical-align: middle; @(Disabled ? "color: gray" : null)">
            <CascadingValue Value="this" IsFixed="true">
                @ItemTemplate?.Invoke((Level, Item))
            </CascadingValue>
        </div>
    </div>
    @if (LoadingChild)
    {
        @LoadChildrenTemplate
    }
    <CascadingValue Value="this" IsFixed="true">
        @(ChildContent?.Invoke(Collapsed))
    </CascadingValue>
</li>

@code{

    private void OnClickEvent()
    {
        if (!HasChildren || (TreeView?.Disabled ?? false))
        {
            return;
        } 
        Collapsed = !Collapsed; CollapsedChanged?.Invoke();
    }

}