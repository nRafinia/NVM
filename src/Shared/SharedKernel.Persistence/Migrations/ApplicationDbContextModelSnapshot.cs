// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedKernel.Persistence;

#nullable disable

namespace SharedKernel.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("Authorizer.Local.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Dashboard.Domain.Entities.LDAPs.LDAP", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AuthenticationType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BaseDn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CredentialId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilterQuery")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProtocolVersion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Scope")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseSecure")
                        .HasColumnType("INTEGER");

                    b.ComplexProperty<Dictionary<string, object>>("Attributes", "Dashboard.Domain.Entities.LDAPs.LDAP.Attributes#LdapAttribute", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("DisplayName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("UniqueId")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("LDAPs", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
